common_incorrect_differentoptions=matrix(rep(n*n),nrow=n,ncol=n)
differentoutcomes=matrix(rep(n*n),nrow=n,ncol=n)
x=1
foreach (i=1:n) %:%
foreach(j=1:n)%dopar%{
cat("going",i," ",x)
common_correct[i,j]=sum(test2[i,]==1 & test2[j,]==1)
common_incorrect_sameoptions[i,j]=sum(test1[i,]==test1[j,])-common_correct[i,j]
common_incorrect_differentoptions[i,j]=sum(test2[i,]==0 & test2[j,]==0)-common_incorrect_sameoptions[i,j]
differentoutcomes=sum(test2[i,]!=test2[j,])
x=x+1
cat("\n")
}
library(tidyverse)
library(purrr)
library(stringdist)
library(doParallel)
library(foreach)
cl <- 3
registerDoParallel(cl)
common_correct=matrix(rep(n*n),nrow=n,ncol=1)
common_incorrect_sameoptions=matrix(rep(n*n),nrow=n,ncol=n)
common_correct=matrix(rep(n*n),nrow=n,ncol=n)
common_incorrect_differentoptions=matrix(rep(n*n),nrow=n,ncol=n)
differentoutcomes=matrix(rep(n*n),nrow=n,ncol=n)
x=1
foreach (i=1:n) %:%
foreach(j=1:n)%dopar%{
cat("going",i," ",x)
common_correct[i,j]=sum(test2[i,]==1 & test2[j,]==1)
common_incorrect_sameoptions[i,j]=sum(test1[i,]==test1[j,])-common_correct[i,j]
common_incorrect_differentoptions[i,j]=sum(test2[i,]==0 & test2[j,]==0)-common_incorrect_sameoptions[i,j]
differentoutcomes=sum(test2[i,]!=test2[j,])
x=x+1
cat("\n")
}
library(tidyverse)
library(purrr)
library(stringdist)
library(doParallel)
library(foreach)
cl <- 3
registerDoParallel(cl)
common_correct=matrix(rep(n*n),nrow=n,ncol=1)
common_incorrect_sameoptions=matrix(rep(n*n),nrow=n,ncol=n)
common_correct=matrix(rep(n*n),nrow=n,ncol=n)
common_incorrect_differentoptions=matrix(rep(n*n),nrow=n,ncol=n)
differentoutcomes=matrix(rep(n*n),nrow=n,ncol=n)
x=1
foreach (i=1:n) %:%
foreach(j=1:n)%dopar%{
cat("going",i," ",x)
common_correct[i,j]=sum(test2[i,]==1 & test2[j,]==1)
common_incorrect_sameoptions[i,j]=sum(test1[i,]==test1[j,])-common_correct[i,j]
common_incorrect_differentoptions[i,j]=sum(test2[i,]==0 & test2[j,]==0)-common_incorrect_sameoptions[i,j]
differentoutcomes=sum(test2[i,]!=test2[j,])
x=x+1
cat("\n")
}
cores<-detectCores()
cores
library(tidyverse)
library(purrr)
library(stringdist)
library(doParallel)
library(foreach)
cores<-detectCores()
cl <- makeCluster(cores[1]-1)
registerDoParallel(cl)
common_correct=matrix(rep(n*n),nrow=n,ncol=1)
common_incorrect_sameoptions=matrix(rep(n*n),nrow=n,ncol=n)
common_correct=matrix(rep(n*n),nrow=n,ncol=n)
common_incorrect_differentoptions=matrix(rep(n*n),nrow=n,ncol=n)
differentoutcomes=matrix(rep(n*n),nrow=n,ncol=n)
x=1
foreach (i=1:n) %:%
foreach(j=1:n)%dopar%{
cat("going",i," ",x)
common_correct[i,j]=sum(test2[i,]==1 & test2[j,]==1)
common_incorrect_sameoptions[i,j]=sum(test1[i,]==test1[j,])-common_correct[i,j]
common_incorrect_differentoptions[i,j]=sum(test2[i,]==0 & test2[j,]==0)-common_incorrect_sameoptions[i,j]
differentoutcomes=sum(test2[i,]!=test2[j,])
x=x+1
cat("\n")
}
cl
library(tidyverse)
library(purrr)
library(stringdist)
library(doParallel)
library(foreach)
"""cores<-detectCores()
cl <- makeCluster(cores[1]-1)
registerDoParallel(cl)"""
common_correct=matrix(rep(n*n),nrow=n,ncol=1)
common_incorrect_sameoptions=matrix(rep(n*n),nrow=n,ncol=n)
common_correct=matrix(rep(n*n),nrow=n,ncol=n)
common_incorrect_differentoptions=matrix(rep(n*n),nrow=n,ncol=n)
differentoutcomes=matrix(rep(n*n),nrow=n,ncol=n)
x=1
foreach (i=1:n) %:%
foreach(j=1:n)%dopar%{
cat("going",i," ",x)
common_correct[i,j]=sum(test2[i,]==1 & test2[j,]==1)
common_incorrect_sameoptions[i,j]=sum(test1[i,]==test1[j,])-common_correct[i,j]
common_incorrect_differentoptions[i,j]=sum(test2[i,]==0 & test2[j,]==0)-common_incorrect_sameoptions[i,j]
differentoutcomes=sum(test2[i,]!=test2[j,])
x=x+1
cat("\n")
}
library(tidyverse)
library(purrr)
library(stringdist)
common_correct=matrix(rep(n*n),nrow=n,ncol=1)
common_incorrect_sameoptions=matrix(rep(n*n),nrow=n,ncol=n)
common_correct=matrix(rep(n*n),nrow=n,ncol=n)
common_incorrect_differentoptions=matrix(rep(n*n),nrow=n,ncol=n)
differentoutcomes=matrix(rep(n*n),nrow=n,ncol=n)
x=1
foreach (i=1:n) %:%
foreach(j=1:n)%dopar%{
cat("going",i," ",x)
common_correct[i,j]=sum(test2[i,]==1 & test2[j,]==1)
common_incorrect_sameoptions[i,j]=sum(test1[i,]==test1[j,])-common_correct[i,j]
common_incorrect_differentoptions[i,j]=sum(test2[i,]==0 & test2[j,]==0)-common_incorrect_sameoptions[i,j]
differentoutcomes=sum(test2[i,]!=test2[j,])
x=x+1
cat("\n")
}
library(Perfit)
library(devtools)
library(cheatdetectionR)
load_all()
itr_rdf
abberrantresponse(itr_rdf)
load_all()
abberrantresponse(itr_rdf)
install.packages("Perfit")
load_all()
abberrantresponse(itr_rdf)
answercopy(rdf,itr_rdf)
common_correct
common_incorrect_differentoptions
differentoutcomes
common_incorrect_differentoptions
differentoutcomes
library(tidyverse)
n=10000
no_centres=100
no_question=100
datagen<-function(n=100,no_centres=10,no_question=100){
sid=seq(1,n,1)
centno=sample.int(no_centres,n,replace=T)
prelim_rdf=matrix(sample.int(5,n*no_question,replace = T),nrow=n,ncol=no_question) %>% as_tibble()
prelim_rdf %>% mutate(sid=sid,centno=centno)->rdf
answer_key=matrix(sample.int(5,no_question,replace=T),ncol=no_question) %>% as_tibble()
itr_rdf<-prelim_rdf
for (i in seq(1,n)){
cat("Processing Candidate",i,"/n")
itr_rdf[i,]<-(answer_key==prelim_rdf[i,])
}
itr_rdf<-itr_rdf %>% mutate(sid=sid,centno=centno)
itr_rdf<-itr_rdf %>% rowwise() %>% mutate(p_scor = sum(c_across(starts_with("V"))))
usethis::use_data(rdf,itr_rdf,overwrite = T,internal = T)
}
load_all()
datagen()
View(rdf)
x=rdf
View(datagen)
datagen(n=100,no_centres=10,no_questions=100)
datagen(n=100,no_centres=10,no_question=100)
x=rdf
View(rdf)
load_all()
View(rdf)
y=itr_rdf
View(y)
nitr_rdfo_question
x,y=datagen()
x=datagen()
load_all()
x=datagen()
rep(1:5,5)
load_all()
datagen()
x=datagen()
View(rdf)
datagen()
load_all()
datagen()
sid=seq(1,n,1)
sid=seq(1,100,1)
centno=sample.int(10,n,replace=T)
prelim_rdf=matrix(sample.int(5,n*no_question,replace = T),nrow=n,ncol=no_question) %>% as_tibble()
load_all()
datagen()
View(rdf)
load_all()
datagen()
load_all()
datagen()
x=datagen()
load_all()
x=datagen()
x$rdf
x[1]
x[2]
rdf,itr_rdf=datagen()
(rdf,itr_rdf)=datagen()
list(rdf,itr_rdf)=datagen()
c(rdf,itr_rdf)=datagen()
x[1]=rdf
x[[1]]
x[1]
n
nnn
datagen()
x[1]
View(x)
x=datagen()
x[1]
x[2]
rdf=x[1]
itr_rdf=x[2]
View(rdf)
rdf=x[[1]]
View(rdf)
itr_rdf=x[[2]]
answercopy(rdf,itr_rdf,n=length(rdf))
common_correct
load_all()
answercopy(rdf,itr_rdf)
length(rdf)
load_all()
answercopy(rdf,itr_rdf)
x$rdf
rbind.data.frame(rdf,itr_rdf)
y=answercopy(rdf,itr_rdf)
common_correct=y[[1]]
common_incorrect_differentoptions=y[[2]]
lapply(common_incorrect_differentoptions, if(x==10000{NA}))
lapply(common_incorrect_differentoptions)
load_all()
answercopy(rdf,itr_rdf)
0==NA
itempreknow(itr_rdf)
systematiccheating(itr_rdf)
load_all()
systematiccheating(itr_rdf)
itr_rdf[,-p_scor]
View(itr_rdf)
load_all()
k_index_response_similarity_2(itr_rdf,rdf,1:100,c(1,2))
``
load_all()
k_index_response_similarity_2(itr_rdf,rdf,1:100,c(1,2))
load_all()
k_index_response_similarity_2(itr_rdf,rdf,1:100,c(1,2))
load_all()
k_index_response_similarity_2(itr_rdf,rdf,1:100,c(1,2))
khelper<-function(df){
out_df <- expand_grid(copier_id = sid,
subgroup_id = sid) %>%
filter(copier_id %in% suspect_pairs$copier_id)
out_df
}
k_index_response_similarity_2 <- function(data, data2, item.loc, suspect_pairs){
n_items = length(item.loc)
data %>%
mutate(across(.cols = item.loc,.fns = ~(.x == 0)),
row_id = sid) %>%
column_to_rownames(var = 'row_id') %>%
dplyr::select(sid, item.loc) -> is_response_incorrect_df
data2 %>%
dplyr::select(sid, item.loc) %>%
column_to_rownames(var = 'sid') %>%
as.matrix() -> raw_responses
is_response_incorrect_df %>%
mutate(n_incorrect = rowSums(is_response_incorrect_df[,2:(n_items+1)], na.rm = TRUE)) %>%
dplyr::select(sid, n_incorrect) -> n_incorrect_df
n_incorrect_df %>%
group_by(n_incorrect) %>%
group_split() %>%
map_dfr(khelper) -> subgroup_df
suspect_pairs %>%
mutate(chunk = ceiling(row_number()/20)) %>%
split(.$chunk) -> pairs_list
map_dfr(pairs_list, function(pairs){
print(paste0('Progress:',100*as.numeric(pairs$chunk[1])/length(pairs_list), '%'))
pairs %>%
inner_join(subgroup_df, by = 'copier_id') %>%
mutate(common_incorrect = rowSums(((raw_responses[as.character(subgroup_id), ] == raw_responses[as.character(source_id), ]) & is_response_incorrect_df[as.character(source_id),2:(n_items+1)]), na.rm = T)) %>%
group_by(copier_id,source_id) %>%
summarise(avg_common_incorrect = mean(common_incorrect)) %>%
ungroup() %>%
left_join(n_incorrect_df %>%
rename(w_s=n_incorrect), by = c('source_id' = 'sid')) %>%
mutate(m = rowSums(((raw_responses[as.character(copier_id), ] == raw_responses[as.character(source_id), ]) & is_response_incorrect_df[as.character(source_id),2:(n_items+1)]), na.rm = T),
p = avg_common_incorrect/w_s,
k.index = 1-pbinom(m-1,w_s,p)) %>%
dplyr::select(copier_id,source_id,k.index) %>%
filter(k.index<=0.01) -> output
output
}) -> res
res
}
load_all()
k_index_response_similarity_2(itr_rdf,rdf,1:100,c(1,2))
install.packages("CopyDetect")
load_all()
optimal_k_index_response_similarity(rdf)
datagen(N=1000,no_centres=10,no_question=100)
load_all()
datagen(n=100,no_centres=10,no_question=100)
datagen(n=100,no_centres=10,no_question=100)
load_all()
datagen(n=100,no_centres=10,no_question=100)
load_all()
datagen(n=100,no_centres=10,no_question=100)
load_all()
datagen(n=100,no_centres=10,no_question=100)
load_all()
x=datagen(n=100,no_centres=10,no_question=100)
rdf=x[[1]]
optimal_k_index_response_similarity(rdf,1:100,c(1,2))
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
load_all()
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
load_all()
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
install.packages("naniar")
load_all()
load_all()
load_all()
datagen()
load_all()
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
datagen()
View(rdf)
rdf=x[[1]]
itr_rdf=x[[2]]
View(rdf)
View(itr_rdf)
x=datagen()
rdf=x[[1]]
itr_rdf=x[[2]]
load_all()
x=datagen()
itr_rdf=x[[2]]
rdf=x[[1]]
load_all()
x=datagen()
rdf=x[[1]]
itr_rdf=x[[2]]
View(itr_rdf)
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
load_all()
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
is_response_incorrect_df
load_all()
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
load_all()
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
answercopy(rdf,itr_rdf)
answercopy(rdf,itr_rdf)
load_all()
answercopy(rdf,itr_rdf)
load_all()
answercopy(rdf,itr_rdf)
load_all()
answercopy(rdf,itr_rdf)
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
itr_rdf %>%
mutate(across(.cols = 1:100,.fns = ~(.x == 0)),
row_id = sid) %>%
column_to_rownames(var = 'row_id') %>%
dplyr::select(sid, item.loc) -> is_response_incorrect_df
itr_rdf %>%
mutate(across(.cols = 1:100,.fns = ~(.x == 0)),
row_id = sid) %>%
column_to_rownames(var = 'row_id')
View(itr_rdf %>%
mutate(across(.cols = 1:100,.fns = ~(.x == 0)),
row_id = sid) %>%
column_to_rownames(var = 'row_id'))
View(itr_rdf %>%
mutate(across(.cols = 1:100,.fns = ~(.x == 0)),
row_id = sid) %>%
column_to_rownames(var = 'row_id') %>% select(sid,1:100))
View(itr_rdf %>%
mutate(across(.cols = 1:100,.fns = ~(.x == 0)),
row_id = sid) %>%
column_to_rownames(var = 'row_id') %>% select(sid,c(1:100))
)
c(1,28:31)
View(itr_rdf %>%
mutate(across(.cols = 1:100,.fns = ~(.x == 0)),
row_id = sid) %>%
column_to_rownames(var = 'row_id') %>% select(c(1:100)))
View(itr_rdf %>%
mutate(across(.cols = 1:100,.fns = ~(.x == 0))) %>%
column_to_rownames(var = "sid"))
v1:v50
v1:v50
paste0(V,c(1:100))
print(paste0(V,c(1:100)))
1+1
lapply(1:100, x+1)
lapply(1:100, x+1)
View(itr_rdf %>%
mutate(across(.cols = 1:100,.fns = ~(.x == 0)),
row_id = sid) %>%
column_to_rownames(var = 'row_id') )
View(itr_rdf %>%
mutate(across(.cols = 1:100,.fns = ~(.x == 0)),
row_id = sid) %>%
column_to_rownames(var = 'row_id') %>% select(sid) )
View(itr_rdf %>%
mutate(across(.cols = 1:100,.fns = ~(.x == 0)),
row_id = sid) %>%
column_to_rownames(var = 'row_id') %>% select("sid") )
zxc=(itr_rdf %>%
mutate(across(.cols = 1:100,.fns = ~(.x == 0)),
row_id = sid) %>%
column_to_rownames(var = 'row_id') )
zxc %>% select(sid)
View(zxc %>% select(sid))
View(zxc %>% as_tibble() %>% select(sid))
View(zxc %>% as_tibble() %>% select(sid ))
View(zxc %>% as_tibble() %>% dplyr::select(sid ))
View(zxc %>% as_tibble() %>% dplyr::select(sid,1:100 ))
View(itr_rdf %>%
mutate(across(.cols = item.loc,is.na),
row_id = sid) %>%
column_to_rownames(var = 'row_id'))
View(itr_rdf %>%
mutate(across(.cols = item.loc,.funs=is.na),
row_id = sid) %>%
column_to_rownames(var = 'row_id'))
View(itr_rdf %>%
mutate(across(.cols = item.loc,.fns=is.na),
row_id = sid) %>%
column_to_rownames(var = 'row_id'))
View(itr_rdf %>%
mutate(across(.cols = item.loc,.fns=~is.na),
row_id = sid) %>%
column_to_rownames(var = 'row_id'))
View(itr_rdf %>%
mutate(across(.cols = 1:100,.fns=~(is.na)),
row_id = sid) %>%
column_to_rownames(var = 'row_id'))
View(itr_rdf %>%
mutate(across(.cols = 1:100,.fns=is.na),
row_id = sid) %>%
column_to_rownames(var = 'row_id'))
View(itr_rdf %>%
mutate(across(.cols = 1:100,.fns=is.na),
row_id = sid) %>%
column_to_rownames(var = 'row_id')%>%
dplyr::select(sid,1:100))
load_all()
optimal_k_index_response_similarity(itr_rdf)
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
library(dtplyr)
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
library(devtools)
load_all()
x=datagen()
rdf=x[[1]]
itr_rdf=x[[2]]
abberrantresponse(itr_rdf,rdf)
abberrantresponse(itr_rdf)
itr_rdf[is.na(itr_rdf)]
itr_rdf[is.na(itr_rdf)]=0
View(itr_rdf)
abberrantresponse(itr_rdf)
x=datagen()
itr_rdf=x[[2]]
rdf=x[[1]]
load_all()
abberrantresponse(itr_rdf)
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
load_all()
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
load_all()
load_all()
optimal_k_index_response_similarity(itr_rdf,1:100,c(1,2))
c(1,2) %>% mutate(chunk=1)
optimal_k_index_response_similarity(itr_rdf,1:100,rdf)
optimal_k_index_response_similarity(itr_rdf,1:100,tibble(copier_id = 1,
source_id =2))
answercopy(rdf,itr_rdf)
y=answercopy(rdf,itr_rdf)
cc=y[[1]]
View(cc)
cis=y[[2]]
cc+cis
View(cc+cis)
View((cc+cis)>10)
View((cc+cis)>10)
load_all()
y=answercopy(rdf,itr_rdf)
